<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		id="dataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
	</bean>

	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactory">
		<property ref="dataSource" name="dataSource" />
		<property name="configLocation"
			value="classpath:util/SqlMapConfig.xml" />
	</bean>


	<bean class="org.mybatis.spring.SqlSessionTemplate"
		id="sqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" index="0" />
	</bean>

	<!-- 트랜잭션 처리 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource" />
	</bean>



	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 1024 * 1024 * 10 bytes : 10MB -->
		<property name="maxUploadSize" value="10485760" />
	</bean>

	<!-- 프로퍼티 파일을 이용해서 값을 중비하는 방법 <util:properties>를 이용해서 properties 타입의 빈으로 
		만든다. -->
	<util:properties id="mailinfo"
		location="classpath:pro/mail.properties" />

	<!-- ${mailinfo['id']} mailinfo 빈에서 키(id)의 값을 가져옴 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="587" />
		<property name="username" value="#{mailinfo['id']}"></property>
		<property name="password" value="#{mailinfo['password']}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
	
	

</beans>
